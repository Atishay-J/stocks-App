[{"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\index.js":"1","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\App.js":"2","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\News.js":"3","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ProfitLossCalc.js":"4","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\GoldSilver.js":"5","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Calculators.js":"6","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto2.js":"7","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenu.js":"8","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Error.js":"9","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Navbar.js":"10","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\StockCard.js":"11","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalculatorCard.js":"12","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ShowProfitLoss.js":"13","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalcScreen.js":"14","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenuBtn.js":"15","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\DataCard.js":"16","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ImgAssets.js":"17","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideBarContent.js":"18"},{"size":525,"mtime":1610824957848,"results":"19","hashOfConfig":"20"},{"size":1697,"mtime":1611411738596,"results":"21","hashOfConfig":"20"},{"size":3076,"mtime":1610824334766,"results":"22","hashOfConfig":"20"},{"size":7660,"mtime":1611322999421,"results":"23","hashOfConfig":"20"},{"size":3835,"mtime":1610818402819,"results":"24","hashOfConfig":"20"},{"size":1085,"mtime":1610825203163,"results":"25","hashOfConfig":"20"},{"size":4140,"mtime":1611228873585,"results":"26","hashOfConfig":"20"},{"size":1089,"mtime":1610824633577,"results":"27","hashOfConfig":"20"},{"size":116,"mtime":1610466131530,"results":"28","hashOfConfig":"20"},{"size":4842,"mtime":1611412233742,"results":"29","hashOfConfig":"20"},{"size":429,"mtime":1610824942232,"results":"30","hashOfConfig":"20"},{"size":387,"mtime":1610723856630,"results":"31","hashOfConfig":"20"},{"size":2597,"mtime":1610824882871,"results":"32","hashOfConfig":"20"},{"size":4623,"mtime":1611322978881,"results":"33","hashOfConfig":"20"},{"size":257,"mtime":1610730228469,"results":"34","hashOfConfig":"20"},{"size":696,"mtime":1611225504875,"results":"35","hashOfConfig":"20"},{"size":986,"mtime":1610722831766,"results":"36","hashOfConfig":"20"},{"size":2287,"mtime":1611410776449,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"et6j0r",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\index.js",[],["82","83"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\App.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\News.js",["84"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./news.css\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nfunction News() {\r\n  const [newsData, setNewsData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const ApiKey = process.env.REACT_APP_NEWS_API_KEY;\r\n  const query = `http://newsapi.org/v2/top-headlines?country=in&category=business&apiKey=${ApiKey}`;\r\n\r\n  //=============================================================\r\n  //                    FETCHING DATA\r\n  //=============================================================\r\n\r\n  async function getNews() {\r\n    let response = await fetch(query);\r\n    let data = await response.json();\r\n\r\n    // console.log(data[\"articles\"]);\r\n    setNewsData(data[\"articles\"]);\r\n  }\r\n\r\n  //=============================================================\r\n  //                    USE EFFECT\r\n  //=============================================================\r\n\r\n  useEffect(() => {\r\n    getNews().then(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  //=============================================================\r\n  //                    OPEN NEWS ON CLICK\r\n  //=============================================================\r\n  function openNews(url) {\r\n    window.open(url, \" _blank\");\r\n  }\r\n\r\n  //=============================================\r\n  //=============================================\r\n\r\n  return (\r\n    <div className=\"newsMainCont\">\r\n      {isLoading ? (\r\n        <>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={5} />\r\n          </div>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={5} />\r\n          </div>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={5} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        newsData &&\r\n        newsData.map((e, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              className=\"newsCont\"\r\n              onClick={() => {\r\n                openNews(e.url);\r\n              }}\r\n            >\r\n              <div className=\"newsImgCont\">\r\n                <img className=\"newsImg\" alt=\"news here\" src={e.urlToImage} />\r\n              </div>\r\n              <div className=\"newsDataCont\">\r\n                <h2 className=\"newsTitle\">{e.title}</h2>\r\n                <div className=\"newsDescCont\">\r\n                  <h4 className=\"newsDesc\">{e.description}</h4>\r\n                  <div className=\"newsDataSmCont\">\r\n                    <h5 className=\"newsSource\">Source :{e.source.name}</h5>\r\n                    <h5 className=\"newsAuthor\">Author :{e.author}</h5>\r\n                    <h5 className=\"newsData\">\r\n                      Date : {e.publishedAt.replace(/[T].*/g, \"\")}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default News;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ProfitLossCalc.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\GoldSilver.js",["85"],"import React, { useState, useEffect } from \"react\";\r\nimport DataCard from \"./DataCard\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\nimport assets from \"./ImgAssets\";\r\n\r\n//=========================================\r\n//            DROPDOWN INIT\r\n//=========================================\r\nconst options = [\r\n  { label: \"INR (₹)\", value: \"INR\" },\r\n  { label: \"USD ($)\", value: \"USD\" },\r\n  { label: \"EUR (€)\", value: \"EUR\" },\r\n  { label: \"JPY (¥)\", value: \"JPY\" },\r\n];\r\nconst defaultOption = options[0].value;\r\n\r\n//========================================\r\n//              REACT FUNCTION\r\n//========================================\r\n\r\nfunction GoldSilver() {\r\n  const [curCurrency, setCurCurrency] = useState(defaultOption);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [goldData, setGoldData] = useState({});\r\n  const [silverData, setSilverData] = useState({});\r\n  //==================================================\r\n  //          SETTING FETCH FUNCTION\r\n  //==================================================\r\n\r\n  async function getGold() {\r\n    let response = await fetch(\r\n      `https://www.goldapi.io/api/XAU/${curCurrency}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-access-token\": process.env.REACT_APP_X_ACCESS_TOKEN,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    let goldData = response.json();\r\n    return goldData;\r\n  }\r\n  async function getSilver() {\r\n    let response = await fetch(\r\n      `https://www.goldapi.io/api/XAG/${curCurrency}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-access-token\": process.env.REACT_APP_X_ACCESS_TOKEN,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    let silverData = response.json();\r\n    return silverData;\r\n  }\r\n\r\n  //=====================================================\r\n  //            USE EFFECT HOOK\r\n  //=====================================================\r\n\r\n  useEffect(() => {\r\n    //****** GOLD ******//\r\n\r\n    getGold().then((data) => {\r\n      console.log(\"DAaaa \", data);\r\n      setGoldData(data);\r\n      // goldData = data;\r\n    });\r\n\r\n    //****** SILVER ******//\r\n\r\n    getSilver().then((data) => {\r\n      console.log(\"DAaaa \", data);\r\n      setSilverData(data);\r\n      // silverData = data;\r\n    });\r\n\r\n    setIsLoading(false);\r\n  }, [curCurrency]);\r\n  //============================================\r\n  //            CHANGE CURRENCY\r\n  //===========================================\r\n  function changeCurrency(e) {\r\n    console.log(\"value \", e.value);\r\n\r\n    setCurCurrency(e.value);\r\n  }\r\n  //====================================================\r\n  //******************** RETURN ********************** */\r\n  //=====================================================\r\n  return (\r\n    <>\r\n      <Dropdown\r\n        className=\"dropdown\"\r\n        options={options}\r\n        onChange={changeCurrency}\r\n        value={curCurrency}\r\n        placeholder=\"Select an option\"\r\n      />\r\n      {isLoading ? (\r\n        <h1>LOading...</h1>\r\n      ) : silverData[\"error\"] || goldData[\"error\"] ? (\r\n        <div className=\"errorCont\">\r\n          <h1 className=\"errorTitle\">\r\n            Sorry!!, We got Some error, please try again after sometime.\r\n          </h1>\r\n          <h3 className=\"errorEmoji\">⚠️</h3>\r\n        </div>\r\n      ) : (\r\n        <div className=\"goldSilverCont\">\r\n          <DataCard\r\n            title=\"Gold\"\r\n            currency={goldData.currency}\r\n            price={goldData.price}\r\n            image={assets.goldImg}\r\n          />\r\n          <DataCard\r\n            title=\"Silver\"\r\n            currency={silverData.currency}\r\n            price={silverData.price}\r\n            image={assets.silverImg}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default GoldSilver;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Calculators.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto2.js",["86","87"],"import React, { useEffect, useState } from \"react\";\r\nimport DataCard from \"./DataCard\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n//=========================================\r\n//            DROPDOWN INIT\r\n//=========================================\r\nconst options = [\r\n  { label: \"INR (₹)\", value: \"INR\" },\r\n  { label: \"USD ($)\", value: \"USD\" },\r\n  { label: \"EUR (€)\", value: \"EUR\" },\r\n  { label: \"JPY (¥)\", value: \"JPY\" },\r\n];\r\nconst defaultOption = options[0].value;\r\n\r\n//========================================\r\n//              REACT FUNCTION\r\n//========================================\r\nfunction Crypto2() {\r\n  const [curCurrency, setCurCurrency] = useState(defaultOption);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [cryptoData, setCryptoData] = useState({});\r\n  //   let cryptoData = [];\r\n\r\n  //===========================================\r\n  //          LIST OF CRYPTOCURRENCIES\r\n  //===========================================\r\n  const cryptoCurrency = [\r\n    { name: \"Bitcoin\", symbol: \"BTC\" },\r\n    { name: \"Ethereum\", symbol: \"ETH\" },\r\n    { name: \"Litecoin\", symbol: \"LTC\" },\r\n  ];\r\n\r\n  //=============================================\r\n  //              API INIT\r\n  //=============================================\r\n  let cryptos = [];\r\n  let url = \"https://coingecko.p.rapidapi.com/coins/markets?vs_currency=\";\r\n\r\n  //====================================================\r\n  //       Converting available currency to array\r\n  //====================================================\r\n\r\n  cryptoCurrency.map((e) => {\r\n    cryptos.push(e.name.toLowerCase());\r\n  });\r\n\r\n  //=======================================================\r\n  //            DECLARING ASYNC API\r\n  //=======================================================\r\n\r\n  let query = `${url}${curCurrency}&ids=${cryptos}`;\r\n\r\n  async function getData() {\r\n    let response = await fetch(query, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-key\": process.env.REACT_APP_X_RapidAPI_Key,\r\n        \"x-rapidapi-host\": \"coingecko.p.rapidapi.com\",\r\n      },\r\n    });\r\n\r\n    let data = await response.json();\r\n    return data;\r\n  }\r\n\r\n  //==========================================================\r\n  //                 USEEFFECT HOOK\r\n  //==========================================================\r\n\r\n  useEffect(() => {\r\n    getData().then((data) => {\r\n      setCryptoData(data);\r\n      setIsLoading(false);\r\n    });\r\n  }, [curCurrency]);\r\n\r\n  //============================================\r\n  //            CHANGE CURRENCY\r\n  //===========================================\r\n  function changeCurrency(e) {\r\n    console.log(\"value \", e.value);\r\n\r\n    setCurCurrency(e.value);\r\n  }\r\n\r\n  //============================================\r\n  //*************** RETURN  ******************/\r\n  //============================================\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        className=\"dropdown\"\r\n        controlClassName=\"dropdownControl\"\r\n        options={options}\r\n        onChange={changeCurrency}\r\n        value={curCurrency}\r\n        placeholder=\"Select an option\"\r\n      />\r\n      {isLoading ? (\r\n        <>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={3} />\r\n          </div>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={3} />\r\n          </div>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={25} count={3} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        Object.keys(cryptoData).map((e) => {\r\n          return (\r\n            <DataCard\r\n              key={cryptoData[e][\"id\"]}\r\n              image={cryptoData[e][\"image\"]}\r\n              title={cryptoData[e][\"name\"]}\r\n              currency={curCurrency}\r\n              price={cryptoData[e][\"current_price\"]}\r\n              symbol={cryptoData[e][\"symbol\"]}\r\n            />\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Crypto2;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenu.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Error.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Navbar.js",["88","89","90","91","92","93","94","95"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  MenuSharp,\r\n  Brightness4,\r\n  Notifications,\r\n  AccountCircleSharp,\r\n  ExpandMoreSharp,\r\n  Block,\r\n} from \"@material-ui/icons\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport SideBarContent from \"./SideBarContent\";\r\nimport \"./navbar.css\";\r\n\r\n//==============================================================\r\n//                REACT FUNCTION\r\n//==============================================================\r\n\r\nfunction Navbar(props) {\r\n  const [sidebarOpen, onSetSidebarOpen] = useState(\"\");\r\n  const [isDark, setDark] = useState(true);\r\n  const [login, setLogin] = useState({\r\n    name: \"Scarlett\",\r\n    state: \"LogOut\",\r\n    img: \"#\",\r\n  });\r\n\r\n  //==============================================================\r\n  //                TOGGLE DARK MODE\r\n  //==============================================================\r\n\r\n  function toggleDarkLight() {\r\n    let values = document.querySelector(\":root\");\r\n\r\n    if (isDark) {\r\n      console.log(\"true\");\r\n      values.style.setProperty(\"--IconColor1\", \"#7b7b7b\");\r\n      values.style.setProperty(\"--fontCol1\", \"#e0e0e0\");\r\n      values.style.setProperty(\"--fontColLight\", \"#e3e3e3\");\r\n      values.style.setProperty(\"--bgCol1\", \"#181818\");\r\n      values.style.setProperty(\"--bgCol2\", \"#171717\");\r\n      values.style.setProperty(\"--boxShd1\", \"#2d2c2c\");\r\n      values.style.setProperty(\"--boxShd2\", \"#000000\");\r\n      values.style.setProperty(\"--boxShd3\", \"#0b0b0b\");\r\n      values.style.setProperty(\"--boxShd4\", \"#090808\");\r\n      values.style.setProperty(\"--boxShdBlk\", \"#d4d4d457\");\r\n      values.style.setProperty(\"--boxShdBlk2\", \"#39393991\");\r\n      values.style.setProperty(\"--invert\", \"85%\");\r\n\r\n      setDark(false);\r\n    } else {\r\n      console.log(\"false\");\r\n      values.style.setProperty(\"--IconColor1\", \"\");\r\n      values.style.setProperty(\"--fontCol1\", \"\");\r\n      values.style.setProperty(\"--fontColLight\", \"\");\r\n      values.style.setProperty(\"--bgCol1\", \"\");\r\n      values.style.setProperty(\"--bgCol2\", \"\");\r\n      values.style.setProperty(\"--boxShd1\", \"\");\r\n      values.style.setProperty(\"--boxShd2\", \"\");\r\n      values.style.setProperty(\"--boxShd3\", \"\");\r\n      values.style.setProperty(\"--boxShd4\", \"\");\r\n      values.style.setProperty(\"--boxShdBlk\", \"\");\r\n      values.style.setProperty(\"--boxShdBlk2\", \"\");\r\n      values.style.setProperty(\"--invert\", \"0\");\r\n\r\n      setDark(true);\r\n    }\r\n  }\r\n\r\n  //==============================================================\r\n  //                OPEN CLOSE SIDEBAR\r\n  //==============================================================\r\n\r\n  function openSideBar() {\r\n    let elem = document.getElementById(\"sideCont\").style.display;\r\n\r\n    if (elem == \"block\") {\r\n      document.getElementById(\"sideCont\").style.display = \"none\";\r\n      // let body = document.getElementsByTagName(\"BODY\")[0];\r\n      // body.style.filter = \"blur(1px)\";\r\n    } else {\r\n      document.getElementById(\"sideCont\").style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  //=============================================================\r\n  //              LOGOUT FUNCITON\r\n  //=============================================================\r\n\r\n  function logOut() {\r\n    login.state == \"LogOut\"\r\n      ? setLogin({ name: \"User\", state: \"LogIn\", img: \"#\" })\r\n      : setLogin({ name: \"Scarlett\", state: \"LogOut\", img: \"#\" });\r\n  }\r\n  console.log(props.name);\r\n  let menuName;\r\n  props.name\r\n    ? (menuName = <h3>name is </h3>)\r\n    : (menuName = (\r\n        <MenuSharp id=\"burgerIcon\" className=\"navIcons\" onClick={openSideBar} />\r\n      ));\r\n  //==============================================================\r\n  //************************************************************* */\r\n  //==============================================================\r\n  return (\r\n    <div id=\"nav_cont\">\r\n      <div className=\"side\">\r\n        {/* <MenuSharp id=\"burgerIcon\" className=\"navIcons\" onClick={openSideBar} /> */}\r\n        {menuName}\r\n        <div id=\"sideCont\">\r\n          <SideBarContent />\r\n        </div>\r\n      </div>\r\n      <div id=\"menuIconsRightCont\">\r\n        <Brightness4\r\n          id=\"darkModeIcon\"\r\n          className=\"navIcons\"\r\n          onClick={toggleDarkLight}\r\n        />\r\n\r\n        {/* <Notifications id=\"notificationIcon\" className=\"navIcons\" /> */}\r\n        <div id=\"loggedIn_cont\">\r\n          <AccountCircleSharp id=\"accountIcon\" className=\"navIcons\" />\r\n\r\n          <h4 id=\"loggedInName\">{login.name}</h4>\r\n          <ExpandMoreSharp id=\"expandIcon\" className=\"navIcons\" />\r\n          <div id=\"dropDown\" onClick={logOut}>\r\n            <h5 className=\"logoutBtn\">\r\n              {login.state}\r\n              <ExitToAppIcon />\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\StockCard.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalculatorCard.js",["96"],"import React from \"react\";\r\nimport \"./calcCard.css\";\r\nfunction CalculatorCard(props) {\r\n  return (\r\n    <div className=\"calculatorCont\" onClick={props.onclick}>\r\n      <div className=\"calcImgCont\">\r\n        <img className=\"calcImg\" alt=\"EMI Image\" src={props.img} />\r\n      </div>\r\n      <h2 className=\"calcTitle\">{props.title}</h2>\r\n    </div>\r\n  );\r\n}\r\nexport default CalculatorCard;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ShowProfitLoss.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalcScreen.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenuBtn.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\DataCard.js",["97"],"import React from \"react\";\r\nimport \"./DataCard.css\";\r\nfunction DataCard(props) {\r\n  return (\r\n    <div className=\"cryptoMainCont\">\r\n      <div className=\"cryptoImgCont\">\r\n        <img className=\"cryptoImg\" alt=\"Image\" src={props.image} />\r\n      </div>\r\n      <div className=\"cryptoInfoCont\">\r\n        <h1 className=\"cryptoTitle\">\r\n          {props.title} <span className=\"cryptoSymbol\">({props.symbol})</span>\r\n        </h1>\r\n        <div className=\"cryptoInfoSm\">\r\n          <h2 className=\"cryptoPrice\">\r\n            {props.price}\r\n            <span className=\"curCurrency\"> {props.currency}</span>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default DataCard;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ImgAssets.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideBarContent.js",["98","99","100"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport PieChartIcon from \"@material-ui/icons/PieChart\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\n\r\nfunction SideBarContent(props) {\r\n  function hide() {\r\n    console.log(\"hideee\");\r\n    document.getElementById(\"sideBarCont\").style.display = \"none\";\r\n  }\r\n\r\n  return (\r\n    <div id=\"sideBarCont\">\r\n      {/* <button onClick={hide}>Hide</button> */}\r\n      <div className=\"listMainCont\">\r\n        <ul className=\"sideBarList\">\r\n          <li className=\"sideBarListItem\">\r\n            <DashboardIcon /> <span className=\"settingName\">Dashboard</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <PieChartIcon /> <span className=\"settingName\">Overview</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <TimelineIcon /> <span className=\"settingName\">Analytics</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <InsertChartIcon /> <span className=\"settingName\">Watchlist</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <AccountCircleIcon /> <span className=\"settingName\">Profile</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"subList\">\r\n        <ul className=\"sideBarList\">\r\n          <li className=\"sideBarListItem\">\r\n            <SettingsIcon />\r\n            <span className=\"settingName\">Settings</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <NotificationsIcon />\r\n            <span className=\"settingName\">Notifications</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"signatureDiv\">\r\n        <h4 className=\"titleFirst\">\r\n          Made with <span>❤</span> by &nbsp;\r\n          <a className=\"name\" href=\"https://atishayjain.netlify.app/\">\r\n            Atishay Jain\r\n          </a>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SideBarContent;\r\n",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":30,"column":6,"nodeType":"107","endLine":30,"endColumn":8,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":82,"column":6,"nodeType":"107","endLine":82,"endColumn":19,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":46,"column":26,"nodeType":"113","messageId":"114","endLine":46,"endColumn":28},{"ruleId":"105","severity":1,"message":"115","line":78,"column":6,"nodeType":"107","endLine":78,"endColumn":19,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"121","line":5,"column":3,"nodeType":"119","messageId":"120","endLine":5,"endColumn":16},{"ruleId":"117","severity":1,"message":"122","line":8,"column":3,"nodeType":"119","messageId":"120","endLine":8,"endColumn":8},{"ruleId":"117","severity":1,"message":"123","line":11,"column":8,"nodeType":"119","messageId":"120","endLine":11,"endColumn":15},{"ruleId":"117","severity":1,"message":"124","line":20,"column":10,"nodeType":"119","messageId":"120","endLine":20,"endColumn":21},{"ruleId":"117","severity":1,"message":"125","line":20,"column":23,"nodeType":"119","messageId":"120","endLine":20,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":77,"column":14,"nodeType":"128","messageId":"129","endLine":77,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":91,"column":17,"nodeType":"128","messageId":"129","endLine":91,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":7,"column":9,"nodeType":"132","endLine":7,"endColumn":68},{"ruleId":"130","severity":1,"message":"131","line":7,"column":9,"nodeType":"132","endLine":7,"endColumn":68},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"133","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"134","line":12,"column":12,"nodeType":"119","messageId":"120","endLine":12,"endColumn":16},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNews'. Either include it or remove the dependency array.","ArrayExpression",["137"],"React Hook useEffect has missing dependencies: 'getGold' and 'getSilver'. Either include them or remove the dependency array.",["138"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["139"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Notifications' is defined but never used.","'Block' is defined but never used.","'Sidebar' is defined but never used.","'sidebarOpen' is assigned a value but never used.","'onSetSidebarOpen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'hide' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [getNews]",{"range":"146","text":"147"},"Update the dependencies array to be: [curCurrency, getGold, getSilver]",{"range":"148","text":"149"},"Update the dependencies array to be: [curCurrency, getData]",{"range":"150","text":"151"},[1022,1024],"[getNews]",[2366,2379],"[curCurrency, getGold, getSilver]",[2503,2516],"[curCurrency, getData]"]