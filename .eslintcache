[{"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\index.js":"1","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\App.js":"2","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Navbar.js":"3","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\sideMenu.js":"4","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenu.js":"5","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenuBtn.js":"6","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ImgAssets.js":"7","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ProfitLossCalc.js":"8","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Main.js":"9","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\StockCard.js":"10","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ShowProfitLoss.js":"11","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\GoldSilver.js":"12","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\DataCard.js":"13","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Error.js":"14","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto.js":"15","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Calculators.js":"16","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\News.js":"17","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto2.js":"18","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalculatorCard.js":"19","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalcScreen.js":"20"},{"size":540,"mtime":1610461469576,"results":"21","hashOfConfig":"22"},{"size":975,"mtime":1610732183346,"results":"23","hashOfConfig":"22"},{"size":742,"mtime":1610011904921,"results":"24","hashOfConfig":"22"},{"size":585,"mtime":1610019503230,"results":"25","hashOfConfig":"22"},{"size":1103,"mtime":1610729751354,"results":"26","hashOfConfig":"22"},{"size":257,"mtime":1610730228469,"results":"27","hashOfConfig":"22"},{"size":986,"mtime":1610722831766,"results":"28","hashOfConfig":"22"},{"size":7429,"mtime":1610444239774,"results":"29","hashOfConfig":"22"},{"size":187,"mtime":1610453205341,"results":"30","hashOfConfig":"22"},{"size":477,"mtime":1610444237553,"results":"31","hashOfConfig":"22"},{"size":2645,"mtime":1610452992572,"results":"32","hashOfConfig":"22"},{"size":3835,"mtime":1610818402819,"results":"33","hashOfConfig":"22"},{"size":696,"mtime":1610814303554,"results":"34","hashOfConfig":"22"},{"size":116,"mtime":1610466131530,"results":"35","hashOfConfig":"22"},{"size":7564,"mtime":1610638097025,"results":"36","hashOfConfig":"22"},{"size":1111,"mtime":1610810464158,"results":"37","hashOfConfig":"22"},{"size":3072,"mtime":1610813309399,"results":"38","hashOfConfig":"22"},{"size":4241,"mtime":1610814711739,"results":"39","hashOfConfig":"22"},{"size":387,"mtime":1610723856630,"results":"40","hashOfConfig":"22"},{"size":4647,"mtime":1610798236653,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"et6j0r",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\index.js",["92","93"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["94","95"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\App.js",["96"],"import \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport SideMenu from \"./SideMenu\";\nimport Main from \"./Main\";\n// import { Switch } from \"@material-ui/core\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ProfitLossCalc from \"./ProfitLossCalc\";\nimport GoldSilver from \"./GoldSilver\";\nimport News from \"./News\";\nimport Calculators from \"./Calculators\";\nimport Crypto2 from \"./Crypto2\";\nimport Error from \"./Error\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          {/* <Main /> */}\n\n          <Route exact path=\"/\" component={ProfitLossCalc} />\n          <Route path=\"/goldandsilver\" component={GoldSilver} />\n          <Route path=\"/news\" component={News} />\n          <Route path=\"/crypto\" component={Crypto2} />\n          <Route path=\"/calculators\" component={Calculators} />\n\n          <Route component={Error} />\n        </Switch>\n      </div>\n      <SideMenu />\n    </>\n  );\n}\n\nexport default App;\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Navbar.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\sideMenu.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenu.js",["97"],"import React, { useState } from \"react\";\r\nimport \"./sideMenu.css\";\r\nimport assets from \"./ImgAssets\";\r\nimport SideMenuBtn from \"./SideMenuBtn\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction SideMenu() {\r\n  return (\r\n    <div id=\"sideMenuCont\">\r\n      {/* <div id=\"sideMenuBtnsCont\"> */}\r\n      <NavLink exact activeClassName=\"navActiveClass\" to=\"/\">\r\n        <SideMenuBtn name=\"Calculate P/L\" url={assets.plCalculator} />\r\n      </NavLink>\r\n      <NavLink activeClassName=\"navActiveClass\" to=\"/goldandsilver\">\r\n        <SideMenuBtn name=\"Gold & Silver\" url={assets.goldBar} />\r\n      </NavLink>\r\n      <NavLink activeClassName=\"navActiveClass\" to=\"/crypto\">\r\n        <SideMenuBtn name=\"Crypto\" url={assets.crypto} />\r\n      </NavLink>\r\n      <NavLink activeClassName=\"navActiveClass\" to=\"/news\">\r\n        <SideMenuBtn name=\"News\" url={assets.news} />\r\n      </NavLink>\r\n      <NavLink activeClassName=\"navActiveClass\" to=\"/calculators\">\r\n        <SideMenuBtn name=\"Calculators\" url={assets.calculators} />\r\n      </NavLink>\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\nexport default SideMenu;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenuBtn.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ImgAssets.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ProfitLossCalc.js",["98","99","100"],"// ** Init API **\r\n\r\nimport React, { useState } from \"react\";\r\nimport StockCard from \"./StockCard\";\r\nimport ShowProfitLoss from \"./ShowProfitLoss\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nlet apiUrl = \"https://www.alphavantage.co/query?function=SYMBOL_SEARCH&\";\r\nconst ApiKey = process.env.REACT_APP_API_KEY;\r\n\r\n// =============================================================================\r\n// stockName Autocomplete (currently disabled, due to API Calls restrictions)\r\n// =============================================================================\r\n// let matchingResults;\r\n\r\n// function autocomplete(event) {\r\n//   let searchInput = event.target.value;\r\n//   let query = `${apiUrl}keywords=${searchInput}&apikey=${ApiKey}`;\r\n\r\n//   console.log(query);\r\n//   if (searchInput === \"\") {\r\n//     console.log(\"No INPUT\");\r\n//   } else {\r\n//     fetch(query)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         matchingResults = data;\r\n//         console.log(matchingResults);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(\"Error\", error);\r\n//       });\r\n//   }\r\n// }\r\n//===============================================================================\r\nlet stockName;\r\nlet numOfStocks;\r\nlet buyingPrice;\r\nlet curStock;\r\nlet curData = \"\";\r\nvar stocksWithSimilarName = [];\r\nlet loader = true;\r\n\r\n//======================= GET USER INPUT VALUES========================\r\n\r\nfunction getValues() {\r\n  stockName = document.getElementById(\"stockNameInput\").value;\r\n  numOfStocks = document.getElementById(\"numberOfStocksInput\").value;\r\n  buyingPrice = document.getElementById(\"buyingPriceInput\").value;\r\n\r\n  console.log(stockName, \"\\n\", numOfStocks, \"\\n\", buyingPrice);\r\n}\r\n\r\n//===============================================================================\r\n//                        REACT FUNCTION\r\n// ==============================================================================\r\nfunction ProfitLossCalc() {\r\n  const [stockList, setStockList] = useState([]);\r\n  const [selectedStock, setSelectedStock] = useState();\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [selectedStockData, setSelectedStockData] = useState({\r\n    open: \"\",\r\n    close: \"\",\r\n    volume: \"\",\r\n    high: \"\",\r\n    low: \"\",\r\n  });\r\n  const [showLoader, setShowLoader] = useState();\r\n\r\n  //=============================================================\r\n  //              FINDING SIMILAR STOCKS LIST (ASYNC FETCH 1)\r\n  //=============================================================\r\n\r\n  async function getSimilarStocks() {\r\n    setShowLoader(true);\r\n    getValues();\r\n    let query = `${apiUrl}keywords=${stockName}&apikey=${ApiKey}`;\r\n    console.log(\"API URL IS \", query);\r\n\r\n    let response = await fetch(query);\r\n    let data = await response.json();\r\n\r\n    console.log(\"FIRST ASYNC FETCH DATA IS (INFUNCTION)\", data);\r\n    setShowLoader(false);\r\n    return data;\r\n  }\r\n\r\n  //==============================================================\r\n  //                ON SUBMIT/CLICK FUNCTION\r\n  //==============================================================\r\n\r\n  function findStock(form) {\r\n    form.preventDefault();\r\n    getSimilarStocks().then((result) => {\r\n      setShowLoader(true);\r\n      console.log(\"FIRST ASYNC FETCH RESULT IS (CALLING) \", result);\r\n      stocksWithSimilarName = result.bestMatches;\r\n      let arr = stocksWithSimilarName.map((item, index) => {\r\n        return {\r\n          name: item[\"2. name\"],\r\n          symbol: item[\"1. symbol\"],\r\n          region: item[\"4. region\"],\r\n        };\r\n      });\r\n      setStockList(arr);\r\n      // loader = false;\r\n      setShowLoader(false);\r\n      console.log(\"LOADER VALUE FROM FIRST FETCH \", loader);\r\n\r\n      setShowResult(false);\r\n    });\r\n  }\r\n\r\n  //==============================================================\r\n  //                SELECT STOCK FROM LIST FUNCTION\r\n  //==============================================================\r\n\r\n  function selectStock(e) {\r\n    setShowLoader(true);\r\n    curStock = e.target.nextSibling.firstChild.innerHTML;\r\n    setSelectedStock(curStock);\r\n\r\n    fetchSelectedStockData(curStock).then((result) => {\r\n      console.log(\"WE GOT THE FETCH RESULT \", result);\r\n\r\n      let arr = \"\";\r\n\r\n      for (let k in result[\"Time Series (Daily)\"]) {\r\n        arr = result[\"Time Series (Daily)\"][k];\r\n        console.log(\"THE ARR GOT THE DATA\", arr);\r\n        break;\r\n      }\r\n      curData = {\r\n        open: arr[\"1. open\"],\r\n        high: arr[\"2. high\"],\r\n        low: arr[\"3. low\"],\r\n        close: arr[\"4. close\"],\r\n        volume: arr[\"5. volume\"],\r\n      };\r\n\r\n      console.log(\"THE CUR DATA IS \", curData);\r\n\r\n      setShowResult(true);\r\n\r\n      setShowLoader(false);\r\n    });\r\n  }\r\n\r\n  //==============================================================\r\n  //            GET DATA OF SELECTED STOCK (ASYNC FETCH 2)\r\n  //==============================================================\r\n\r\n  let curStockKey = selectedStock;\r\n\r\n  async function fetchSelectedStockData(value) {\r\n    setShowLoader(true);\r\n    let stockDataURL = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${value}&apikey=${ApiKey}`;\r\n\r\n    console.log(\"API URL IS \", stockDataURL);\r\n\r\n    let response = await fetch(stockDataURL);\r\n    let data = await response.json();\r\n\r\n    console.log(\"FETCHING IS Going done NOW \", data);\r\n    // setShowLoader(false);\r\n    // loader = false;\r\n    setShowLoader(false);\r\n    return data;\r\n  }\r\n\r\n  //================================================================================\r\n  //                              SHOW OUTPUT\r\n  //===============================================================================\r\n\r\n  let output;\r\n\r\n  if (showLoader) {\r\n    output = <Skeleton />;\r\n  } else {\r\n    // output = <h1>LOaded...</h1>;\r\n    showResult\r\n      ? (output = (\r\n          <ShowProfitLoss\r\n            curstock={selectedStock}\r\n            stockData={curData}\r\n            stocksNum={numOfStocks}\r\n            stocksPrice={buyingPrice}\r\n          />\r\n        ))\r\n      : (output = stockList && (\r\n          <div>\r\n            {stockList.map((item, index) => (\r\n              <StockCard\r\n                key={index}\r\n                click={selectStock}\r\n                title={item.name}\r\n                symbol={item.symbol}\r\n                region={item.region}\r\n              />\r\n            ))}\r\n          </div>\r\n        ));\r\n  }\r\n\r\n  return (\r\n    <div id=\"mainCalcCont\">\r\n      <h4 className=\"calcHeading\">Calculate Profit / Loss</h4>\r\n\r\n      <div className=\"inputCont\">\r\n        <form onSubmit={findStock}>\r\n          <input\r\n            required\r\n            className=\"inputField\"\r\n            id=\"stockNameInput\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Stock Name\"\r\n          />\r\n          <input\r\n            required\r\n            className=\"inputField\"\r\n            id=\"buyingPriceInput\"\r\n            type=\"number\"\r\n            placeholder=\"Buying Price\"\r\n            min=\"1\"\r\n          />\r\n          <input\r\n            required\r\n            className=\"inputField\"\r\n            id=\"numberOfStocksInput\"\r\n            type=\"number\"\r\n            placeholder=\"Number of stocks\"\r\n            min=\"1\"\r\n          />\r\n          <input type=\"submit\" className=\"submitBtn\" value=\"Search\" />\r\n        </form>\r\n      </div>\r\n\r\n      {/*   **LIST OUPUT**   */}\r\n      {output}\r\n    </div>\r\n  );\r\n}\r\nexport default ProfitLossCalc;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Main.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\StockCard.js",["101"],"import Skeleton from \"react-loading-skeleton\";\r\nimport \"./stockCard.css\";\r\nfunction StockCard(props) {\r\n  return (\r\n    <div className=\"stockCardCont\">\r\n      <h2 className=\"stockCardTitle\" onClick={props.click}>\r\n        {props.title}\r\n      </h2>\r\n      <div className=\"stockCardInfoCont\">\r\n        <h3 className=\"stockCardSymbol\">{props.symbol}</h3>\r\n        <h5 className=\"stockCardRegion\">{props.region}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default StockCard;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ShowProfitLoss.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\GoldSilver.js",["102"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\DataCard.js",["103"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Error.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto.js",["104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, { useEffect, useState } from \"react\";\r\nimport DataCard from \"./DataCard\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nfunction Crypto() {\r\n  const [curCurrency, setCurCurrency] = useState(\"INR\");\r\n  const [gotError, setGotError] = useState(false);\r\n  const [cryptoData, setCryptoData] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [curQuery, setCurQuery] = useState(null);\r\n  let ApiKey = process.env.REACT_APP_API_KEY;\r\n  let ApiUrl =\r\n    \"https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=\";\r\n\r\n  //=================================================================\r\n\r\n  let output;\r\n  let query;\r\n  // let cryptoData = [];\r\n\r\n  const options = [\r\n    { label: \"INR (₹)\", value: \"INR\" },\r\n    { label: \"USD ($)\", value: \"USD\" },\r\n    { label: \"EUR (€)\", value: \"EUR\" },\r\n    { label: \"JPY (¥)\", value: \"JPY\" },\r\n  ];\r\n  const cryptoCurrency = [\r\n    { name: \"Bitcoin\", symbol: \"BTC\" },\r\n    { name: \"Ethereum\", symbol: \"ETH\" },\r\n    { name: \"Tether\", symbol: \"USDT\" },\r\n    { name: \"Litecoin\", symbol: \"LTC\" },\r\n    { name: \"Bitcoin Cash\", symbol: \"BCH\" },\r\n  ];\r\n\r\n  const defaultOption = options[0];\r\n\r\n  //===================================================================\r\n  //                GETTING VALUE FROM ASYNC FETCH\r\n  //===================================================================\r\n\r\n  // function btc() {\r\n  //   // curQuery = `${ApiUrl}${cryptocu}&to_currency=${curCurrency}&apikey=${ApiKey}`;\r\n  //   console.log(cryptoCurrency[0].symbol);\r\n  // }\r\n  // btc();\r\n  async function call() {\r\n    for (let i = 0; i < cryptoCurrency.length; i++) {\r\n      // console.log(cryptoCurrency[i].symbol);\r\n      setCurQuery(\r\n        `${ApiUrl}${cryptoCurrency[i].symbol}&to_currency=${curCurrency}&apikey=${ApiKey}`\r\n      );\r\n    }\r\n    console.log(curQuery);\r\n    let response = await fetch(curQuery);\r\n    let data = response.json();\r\n    console.log(\"CALLLEEEDDD\", data);\r\n  }\r\n  useEffect(() => {\r\n    call();\r\n    console.log(\"changer\", curQuery);\r\n  }, [curQuery]);\r\n\r\n  // function getCryptos() {\r\n  //   cryptoCurrency.map((item) => {\r\n  //     query = `${ApiUrl}${item.symbol}&to_currency=${curCurrency}&apikey=${ApiKey}`;\r\n  //     callme();\r\n  //   });\r\n  // }\r\n  // function callme() {\r\n  //   console.log(\"called\");\r\n  // }\r\n\r\n  // async function doFetch() {\r\n  //   // cryptoCurrency.forEach((e) => {\r\n  //   //   console.log(\"loggggg\");\r\n  //   //   console.log(e.symbol);\r\n  //   //   let curSymbol = e.symbol;\r\n  //   //   query = `${ApiUrl}${curSymbol}&to_currency=${curCurrency}&apikey=${ApiKey}`;\r\n  //   // },\r\n  //   // cryptoCurrency.map((item) => console.log(\"IMTEE\", item));\r\n  //   // let response = await fetch(query);\r\n  //   // let data = await response.json();\r\n  //   // console.log(\"INSIDE AYSNC FETCH\");\r\n  //   // return data;\r\n  // }\r\n  // doFetch();\r\n  // useEffect(() => {\r\n\r\n  //     doFetch().then((result) => {\r\n  //       if (result.Note) {\r\n  //         console.log(\"GOT AN BIIGGG ERROR\");\r\n  //         setGotError(true);\r\n  //       } else {\r\n  //         // console.log(\"LAST LOGGGGG\");\r\n  //         // console.log(\"FROM LAST DATA \", result);\r\n  //         cryptoData.push(result[\"Realtime Currency Exchange Rate\"]);\r\n  //         setGotError(false);\r\n  //         setIsLoading(false);\r\n  //         // setCryptoData([...cryptoData, { result }]);\r\n  //         // console.log(cryptoData);\r\n  //       }\r\n  //     });\r\n\r\n  //     //=======================================================\r\n  //     //=======================================================\r\n  //   });\r\n  // }, [curCurrency]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"STATE CHANGED\");\r\n  // }, [cryptoData]);\r\n\r\n  //=============================================================================\r\n  //                             CHANGING CURRENCY\r\n  //=============================================================================\r\n\r\n  //==========================================================================\r\n  //                        OUTPUT\r\n  //=========================================================================\r\n  // console.log(gotError);\r\n  // if (gotError) {\r\n  //   console.log(gotError);\r\n  //   output = (\r\n  //     <div className=\"errorCont\">\r\n  //       <h2 className=\"errorMsg\">\r\n  //         Sorry! We have reached the limit of API calls, Please check after\r\n  //         sometime\r\n  //       </h2>\r\n  //       <h3 className=\"errorMsgSm\">Check Console for more info.</h3>\r\n  //     </div>\r\n  //   );\r\n  // } else {\r\n  //   output = (\r\n  //     <div className=\"listCont\">\r\n  //       {cryptoData.map((e) => {\r\n  //         {\r\n  //           /* let title =\r\n  //           e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //             \"2. From_Currency Name\"\r\n  //           ];\r\n  //         let currCode =\r\n  //           e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //             \"1. From_Currency Code\"\r\n  //           ];\r\n  //         let outputCurr =\r\n  //           e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //             \"4. To_Currency Name\"\r\n  //           ];\r\n  //         let exchangeRate =\r\n  //           e[\"result\"][\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"];\r\n  //         console.log(title); */\r\n  //         }\r\n\r\n  //         return (\r\n  //           <DataCard\r\n  //             title={\r\n  //               e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //                 \"2. From_Currency Name\"\r\n  //               ]\r\n  //             }\r\n  //             currCode={\r\n  //               e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //                 \"1. From_Currency Code\"\r\n  //               ]\r\n  //             }\r\n  //             outputCurr={\r\n  //               e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //                 \"4. To_Currency Name\"\r\n  //               ]\r\n  //             }\r\n  //             exchangeRate={\r\n  //               e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //                 \"5. Exchange Rate\"\r\n  //               ]\r\n  //             }\r\n  //           />\r\n  //         );\r\n  //       })}\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  // if (gotError) {\r\n  //   console.log(gotError);\r\n  //   output = (\r\n  //     <div className=\"errorCont\">\r\n  //       <h2 className=\"errorMsg\">\r\n  //         Sorry! We have reached the limit of API calls, Please check after\r\n  //         sometime\r\n  //       </h2>\r\n  //       <h3 className=\"errorMsgSm\">Check Console for more info.</h3>\r\n  //     </div>\r\n  //   );\r\n  // } else {\r\n  //   output =\r\n  //     isLoading &&\r\n  //     (<h1>Loading...</h1>)(\r\n  //       <div className=\"listCont\">\r\n  //         {cryptoData.map((e) => (\r\n  //           <DataCard\r\n  //             title={e[\"2. From_Currency Name\"]}\r\n  //             currCode={e[\"1. From_Currency Code\"]}\r\n  //             outputCurr={e[\"4. To_Currency Name\"]}\r\n  //             exchangeRate={e[\"5. Exchange Rate\"]}\r\n  //           />\r\n  //         ))}\r\n  //       </div>\r\n  //     );\r\n  // }\r\n\r\n  //========================================================================\r\n  //========================================================================\r\n  return (\r\n    <div className=\"cryptoCont\">\r\n      {/* <div className=\"selectorsCont\">\r\n        <Dropdown\r\n          options={options}\r\n          onChange={changeCurrency}\r\n          value={defaultOption}\r\n          placeholder=\"Select an option\"\r\n        />\r\n      </div>\r\n\r\n      {output} */}\r\n    </div>\r\n  );\r\n}\r\nexport default Crypto;\r\n",["117","118"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Calculators.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\News.js",["119"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto2.js",["120","121"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalculatorCard.js",["122"],"import React from \"react\";\r\nimport \"./calcCard.css\";\r\nfunction CalculatorCard(props) {\r\n  return (\r\n    <div className=\"calculatorCont\" onClick={props.onclick}>\r\n      <div className=\"calcImgCont\">\r\n        <img className=\"calcImg\" alt=\"EMI Image\" src={props.img} />\r\n      </div>\r\n      <h2 className=\"calcTitle\">{props.title}</h2>\r\n    </div>\r\n  );\r\n}\r\nexport default CalculatorCard;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalcScreen.js",["123"],"import React, { useEffect, useState } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction CalcScreen() {\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [result, setResult] = useState({\r\n    instal: \"\",\r\n    interest: \"\",\r\n    total: \"\",\r\n    princi: \"\",\r\n  });\r\n  let amount, rate, tenure;\r\n\r\n  //=====================================================\r\n  //                GETTING VALUES\r\n  //====================================================\r\n  function getValues() {\r\n    amount = document.getElementById(\"loanAmt\").value;\r\n    rate = document.getElementById(\"roi\").value;\r\n    tenure = document.getElementById(\"tenure\").value;\r\n  }\r\n  //=====================================================\r\n  //                CALCULATE ON CLICK\r\n  //====================================================\r\n  function calculate(e) {\r\n    e.preventDefault();\r\n    getValues();\r\n    console.log(\"amount \", amount);\r\n    console.log(\"rate \", rate);\r\n    console.log(\"tenure \", tenure);\r\n\r\n    let r = rate / (12 * 100);\r\n\r\n    let x = amount * r;\r\n    let y = Math.pow(1 + r, tenure);\r\n    let z = y - 1;\r\n    let ans = x * (y / z);\r\n    let emi = ans.toFixed(2);\r\n\r\n    console.log(\"EMI \", emi);\r\n\r\n    let totalAmt = (emi * tenure).toFixed(2);\r\n\r\n    let totalInterest = (totalAmt - amount).toFixed(2);\r\n\r\n    setResult({\r\n      instal: emi,\r\n      interest: totalInterest,\r\n      total: totalAmt,\r\n      princi: amount,\r\n    });\r\n    setShowResult(true);\r\n  }\r\n\r\n  //===========================================================\r\n  //                  GRAPH\r\n  //==========================================================\r\n  const data = {\r\n    labels: [\"Principal Amount\", \" Total Interest\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [result.princi, result.interest],\r\n        backgroundColor: [\"rgba(0,63,92,1)\", \"rgba(64,232,111,1)\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  //========================================================\r\n  //********************* RETURN *********************** */\r\n  //========================================================\r\n  return (\r\n    <>\r\n      <div className=\"calcScreenCont\">\r\n        <form className=\"calcScreenForm\" onSubmit={calculate}>\r\n          <h1 className=\"calcTitle\">Calculate EMI</h1>\r\n          <div className=\"inputHolder\">\r\n            <input\r\n              required\r\n              className=\"calcScreenInput\"\r\n              id=\"loanAmt\"\r\n              type=\"number\"\r\n              min=\"10\"\r\n              placeholder=\"Loan Amount\"\r\n            />\r\n            <span className=\"inputSymbols\">$</span>\r\n          </div>\r\n          <div className=\"inputHolder\">\r\n            <input\r\n              required\r\n              className=\"calcScreenInput\"\r\n              id=\"roi\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              step=\"0.1\"\r\n              placeholder=\"Rate of Interest\"\r\n            />\r\n            <span className=\"inputSymbols\">%</span>\r\n          </div>\r\n          <div className=\"inputHolder\">\r\n            <input\r\n              required\r\n              className=\"calcScreenInput\"\r\n              id=\"tenure\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              placeholder=\"Loan Tenure (In months)\"\r\n            />\r\n            <span className=\"inputSymbols\">months</span>\r\n          </div>\r\n          <div className=\"inputHolder\">\r\n            <input\r\n              className=\"calcScreenSubmit\"\r\n              type=\"submit\"\r\n              value=\"Calculate\"\r\n            />\r\n          </div>\r\n        </form>\r\n        {showResult && (\r\n          <div className=\"calcResultCont\">\r\n            <div className=\"calcResultTextCont\">\r\n              <h1 className=\"emi\">\r\n                EMI: <span className=\"calcValues\"> {result.instal}</span>\r\n              </h1>\r\n              <h2 className=\"interest\">\r\n                Total Interest:\r\n                <span className=\"calcValues\"> {result.interest}</span>\r\n              </h2>\r\n              <h2 className=\"ttlAmt\">\r\n                Total Amount:{\" \"}\r\n                <span className=\"calcValues\"> {result.total}</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"calcResultGraph\">\r\n              <Doughnut\r\n                data={data}\r\n                height={150}\r\n                width={150}\r\n                options={{\r\n                  responsive: false,\r\n                  maintainAspectRatio: false,\r\n                  defaultFontSize: \"14px\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default CalcScreen;\r\n",{"ruleId":"124","severity":1,"message":"125","line":3,"column":25,"nodeType":"126","messageId":"127","endLine":3,"endColumn":31},{"ruleId":"124","severity":1,"message":"128","line":3,"column":33,"nodeType":"126","messageId":"127","endLine":3,"endColumn":38},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"124","severity":1,"message":"133","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":12},{"ruleId":"124","severity":1,"message":"134","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"135","line":61,"column":10,"nodeType":"126","messageId":"127","endLine":61,"endColumn":27},{"ruleId":"124","severity":1,"message":"136","line":61,"column":29,"nodeType":"126","messageId":"127","endLine":61,"endColumn":49},{"ruleId":"124","severity":1,"message":"137","line":153,"column":7,"nodeType":"126","messageId":"127","endLine":153,"endColumn":18},{"ruleId":"124","severity":1,"message":"138","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":82,"column":6,"nodeType":"141","endLine":82,"endColumn":19,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":7,"column":9,"nodeType":"145","endLine":7,"endColumn":68},{"ruleId":"124","severity":1,"message":"146","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"147","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":16},{"ruleId":"124","severity":1,"message":"148","line":7,"column":23,"nodeType":"126","messageId":"127","endLine":7,"endColumn":37},{"ruleId":"124","severity":1,"message":"149","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":18},{"ruleId":"124","severity":1,"message":"150","line":8,"column":20,"nodeType":"126","messageId":"127","endLine":8,"endColumn":31},{"ruleId":"124","severity":1,"message":"151","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":20},{"ruleId":"124","severity":1,"message":"152","line":9,"column":22,"nodeType":"126","messageId":"127","endLine":9,"endColumn":35},{"ruleId":"124","severity":1,"message":"153","line":10,"column":10,"nodeType":"126","messageId":"127","endLine":10,"endColumn":19},{"ruleId":"124","severity":1,"message":"154","line":10,"column":21,"nodeType":"126","messageId":"127","endLine":10,"endColumn":33},{"ruleId":"124","severity":1,"message":"155","line":18,"column":7,"nodeType":"126","messageId":"127","endLine":18,"endColumn":13},{"ruleId":"124","severity":1,"message":"156","line":19,"column":7,"nodeType":"126","messageId":"127","endLine":19,"endColumn":12},{"ruleId":"124","severity":1,"message":"157","line":36,"column":9,"nodeType":"126","messageId":"127","endLine":36,"endColumn":22},{"ruleId":"139","severity":1,"message":"158","line":62,"column":6,"nodeType":"141","endLine":62,"endColumn":16,"suggestions":"159"},{"ruleId":"129","replacedBy":"160"},{"ruleId":"131","replacedBy":"161"},{"ruleId":"139","severity":1,"message":"162","line":31,"column":6,"nodeType":"141","endLine":31,"endColumn":8,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":46,"column":26,"nodeType":"166","messageId":"167","endLine":46,"endColumn":28},{"ruleId":"139","severity":1,"message":"168","line":80,"column":6,"nodeType":"141","endLine":80,"endColumn":19,"suggestions":"169"},{"ruleId":"143","severity":1,"message":"144","line":7,"column":9,"nodeType":"145","endLine":7,"endColumn":68},{"ruleId":"124","severity":1,"message":"170","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","no-native-reassign",["171"],"no-negated-in-lhs",["172"],"'Main' is defined but never used.","'useState' is defined but never used.","'selectedStockData' is assigned a value but never used.","'setSelectedStockData' is assigned a value but never used.","'curStockKey' is assigned a value but never used.","'Skeleton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getGold' and 'getSilver'. Either include them or remove the dependency array.","ArrayExpression",["173"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'DataCard' is defined but never used.","'Dropdown' is defined but never used.","'setCurCurrency' is assigned a value but never used.","'gotError' is assigned a value but never used.","'setGotError' is assigned a value but never used.","'cryptoData' is assigned a value but never used.","'setCryptoData' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'output' is defined but never used.","'query' is defined but never used.","'defaultOption' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'call'. Either include it or remove the dependency array.",["174"],["171"],["172"],"React Hook useEffect has a missing dependency: 'getNews'. Either include it or remove the dependency array.",["175"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["176"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [curCurrency, getGold, getSilver]",{"range":"185","text":"186"},"Update the dependencies array to be: [call, curQuery]",{"range":"187","text":"188"},"Update the dependencies array to be: [getNews]",{"range":"189","text":"190"},"Update the dependencies array to be: [curCurrency, getData]",{"range":"191","text":"192"},[2366,2379],"[curCurrency, getGold, getSilver]",[2083,2093],"[call, curQuery]",[1045,1047],"[getNews]",[2576,2589],"[curCurrency, getData]"]