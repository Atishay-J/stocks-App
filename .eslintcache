[{"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\index.js":"1","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\App.js":"2","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Navbar.js":"3","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\sideMenu.js":"4","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenu.js":"5","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenuBtn.js":"6","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ImgAssets.js":"7","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ProfitLossCalc.js":"8","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Main.js":"9","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\StockCard.js":"10","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ShowProfitLoss.js":"11","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\GoldSilver.js":"12","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\DataCard.js":"13","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Error.js":"14","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto.js":"15","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Calculators.js":"16","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\News.js":"17","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto2.js":"18","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalculatorCard.js":"19","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalcScreen.js":"20","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideBarContent.js":"21"},{"size":525,"mtime":1610824957848,"results":"22","hashOfConfig":"23"},{"size":1001,"mtime":1611068564829,"results":"24","hashOfConfig":"23"},{"size":3870,"mtime":1611322116020,"results":"25","hashOfConfig":"23"},{"size":585,"mtime":1610019503230,"results":"26","hashOfConfig":"23"},{"size":1089,"mtime":1610824633577,"results":"27","hashOfConfig":"23"},{"size":257,"mtime":1610730228469,"results":"28","hashOfConfig":"23"},{"size":986,"mtime":1610722831766,"results":"29","hashOfConfig":"23"},{"size":7660,"mtime":1611322999421,"results":"30","hashOfConfig":"23"},{"size":187,"mtime":1610453205341,"results":"31","hashOfConfig":"23"},{"size":429,"mtime":1610824942232,"results":"32","hashOfConfig":"23"},{"size":2597,"mtime":1610824882871,"results":"33","hashOfConfig":"23"},{"size":3835,"mtime":1610818402819,"results":"34","hashOfConfig":"23"},{"size":696,"mtime":1611225504875,"results":"35","hashOfConfig":"23"},{"size":116,"mtime":1610466131530,"results":"36","hashOfConfig":"23"},{"size":7564,"mtime":1610638097025,"results":"37","hashOfConfig":"23"},{"size":1085,"mtime":1610825203163,"results":"38","hashOfConfig":"23"},{"size":3076,"mtime":1610824334766,"results":"39","hashOfConfig":"23"},{"size":4140,"mtime":1611228873585,"results":"40","hashOfConfig":"23"},{"size":387,"mtime":1610723856630,"results":"41","hashOfConfig":"23"},{"size":4623,"mtime":1611322978881,"results":"42","hashOfConfig":"23"},{"size":2287,"mtime":1611322704419,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"et6j0r",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\index.js",[],["96","97"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\App.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Navbar.js",["98","99","100","101","102","103","104","105"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\sideMenu.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenu.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideMenuBtn.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ImgAssets.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ProfitLossCalc.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Main.js",[],["106","107"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\StockCard.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\ShowProfitLoss.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\GoldSilver.js",["108"],"import React, { useState, useEffect } from \"react\";\r\nimport DataCard from \"./DataCard\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\nimport assets from \"./ImgAssets\";\r\n\r\n//=========================================\r\n//            DROPDOWN INIT\r\n//=========================================\r\nconst options = [\r\n  { label: \"INR (₹)\", value: \"INR\" },\r\n  { label: \"USD ($)\", value: \"USD\" },\r\n  { label: \"EUR (€)\", value: \"EUR\" },\r\n  { label: \"JPY (¥)\", value: \"JPY\" },\r\n];\r\nconst defaultOption = options[0].value;\r\n\r\n//========================================\r\n//              REACT FUNCTION\r\n//========================================\r\n\r\nfunction GoldSilver() {\r\n  const [curCurrency, setCurCurrency] = useState(defaultOption);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [goldData, setGoldData] = useState({});\r\n  const [silverData, setSilverData] = useState({});\r\n  //==================================================\r\n  //          SETTING FETCH FUNCTION\r\n  //==================================================\r\n\r\n  async function getGold() {\r\n    let response = await fetch(\r\n      `https://www.goldapi.io/api/XAU/${curCurrency}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-access-token\": process.env.REACT_APP_X_ACCESS_TOKEN,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    let goldData = response.json();\r\n    return goldData;\r\n  }\r\n  async function getSilver() {\r\n    let response = await fetch(\r\n      `https://www.goldapi.io/api/XAG/${curCurrency}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-access-token\": process.env.REACT_APP_X_ACCESS_TOKEN,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    let silverData = response.json();\r\n    return silverData;\r\n  }\r\n\r\n  //=====================================================\r\n  //            USE EFFECT HOOK\r\n  //=====================================================\r\n\r\n  useEffect(() => {\r\n    //****** GOLD ******//\r\n\r\n    getGold().then((data) => {\r\n      console.log(\"DAaaa \", data);\r\n      setGoldData(data);\r\n      // goldData = data;\r\n    });\r\n\r\n    //****** SILVER ******//\r\n\r\n    getSilver().then((data) => {\r\n      console.log(\"DAaaa \", data);\r\n      setSilverData(data);\r\n      // silverData = data;\r\n    });\r\n\r\n    setIsLoading(false);\r\n  }, [curCurrency]);\r\n  //============================================\r\n  //            CHANGE CURRENCY\r\n  //===========================================\r\n  function changeCurrency(e) {\r\n    console.log(\"value \", e.value);\r\n\r\n    setCurCurrency(e.value);\r\n  }\r\n  //====================================================\r\n  //******************** RETURN ********************** */\r\n  //=====================================================\r\n  return (\r\n    <>\r\n      <Dropdown\r\n        className=\"dropdown\"\r\n        options={options}\r\n        onChange={changeCurrency}\r\n        value={curCurrency}\r\n        placeholder=\"Select an option\"\r\n      />\r\n      {isLoading ? (\r\n        <h1>LOading...</h1>\r\n      ) : silverData[\"error\"] || goldData[\"error\"] ? (\r\n        <div className=\"errorCont\">\r\n          <h1 className=\"errorTitle\">\r\n            Sorry!!, We got Some error, please try again after sometime.\r\n          </h1>\r\n          <h3 className=\"errorEmoji\">⚠️</h3>\r\n        </div>\r\n      ) : (\r\n        <div className=\"goldSilverCont\">\r\n          <DataCard\r\n            title=\"Gold\"\r\n            currency={goldData.currency}\r\n            price={goldData.price}\r\n            image={assets.goldImg}\r\n          />\r\n          <DataCard\r\n            title=\"Silver\"\r\n            currency={silverData.currency}\r\n            price={silverData.price}\r\n            image={assets.silverImg}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default GoldSilver;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\DataCard.js",["109"],"import React from \"react\";\r\nimport \"./DataCard.css\";\r\nfunction DataCard(props) {\r\n  return (\r\n    <div className=\"cryptoMainCont\">\r\n      <div className=\"cryptoImgCont\">\r\n        <img className=\"cryptoImg\" alt=\"Image\" src={props.image} />\r\n      </div>\r\n      <div className=\"cryptoInfoCont\">\r\n        <h1 className=\"cryptoTitle\">\r\n          {props.title} <span className=\"cryptoSymbol\">({props.symbol})</span>\r\n        </h1>\r\n        <div className=\"cryptoInfoSm\">\r\n          <h2 className=\"cryptoPrice\">\r\n            {props.price}\r\n            <span className=\"curCurrency\"> {props.currency}</span>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default DataCard;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Error.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto.js",["110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { useEffect, useState } from \"react\";\r\nimport DataCard from \"./DataCard\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nfunction Crypto() {\r\n  const [curCurrency, setCurCurrency] = useState(\"INR\");\r\n  const [gotError, setGotError] = useState(false);\r\n  const [cryptoData, setCryptoData] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [curQuery, setCurQuery] = useState(null);\r\n  let ApiKey = process.env.REACT_APP_API_KEY;\r\n  let ApiUrl =\r\n    \"https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=\";\r\n\r\n  //=================================================================\r\n\r\n  let output;\r\n  let query;\r\n  // let cryptoData = [];\r\n\r\n  const options = [\r\n    { label: \"INR (₹)\", value: \"INR\" },\r\n    { label: \"USD ($)\", value: \"USD\" },\r\n    { label: \"EUR (€)\", value: \"EUR\" },\r\n    { label: \"JPY (¥)\", value: \"JPY\" },\r\n  ];\r\n  const cryptoCurrency = [\r\n    { name: \"Bitcoin\", symbol: \"BTC\" },\r\n    { name: \"Ethereum\", symbol: \"ETH\" },\r\n    { name: \"Tether\", symbol: \"USDT\" },\r\n    { name: \"Litecoin\", symbol: \"LTC\" },\r\n    { name: \"Bitcoin Cash\", symbol: \"BCH\" },\r\n  ];\r\n\r\n  const defaultOption = options[0];\r\n\r\n  //===================================================================\r\n  //                GETTING VALUE FROM ASYNC FETCH\r\n  //===================================================================\r\n\r\n  // function btc() {\r\n  //   // curQuery = `${ApiUrl}${cryptocu}&to_currency=${curCurrency}&apikey=${ApiKey}`;\r\n  //   console.log(cryptoCurrency[0].symbol);\r\n  // }\r\n  // btc();\r\n  async function call() {\r\n    for (let i = 0; i < cryptoCurrency.length; i++) {\r\n      // console.log(cryptoCurrency[i].symbol);\r\n      setCurQuery(\r\n        `${ApiUrl}${cryptoCurrency[i].symbol}&to_currency=${curCurrency}&apikey=${ApiKey}`\r\n      );\r\n    }\r\n    console.log(curQuery);\r\n    let response = await fetch(curQuery);\r\n    let data = response.json();\r\n    console.log(\"CALLLEEEDDD\", data);\r\n  }\r\n  useEffect(() => {\r\n    call();\r\n    console.log(\"changer\", curQuery);\r\n  }, [curQuery]);\r\n\r\n  // function getCryptos() {\r\n  //   cryptoCurrency.map((item) => {\r\n  //     query = `${ApiUrl}${item.symbol}&to_currency=${curCurrency}&apikey=${ApiKey}`;\r\n  //     callme();\r\n  //   });\r\n  // }\r\n  // function callme() {\r\n  //   console.log(\"called\");\r\n  // }\r\n\r\n  // async function doFetch() {\r\n  //   // cryptoCurrency.forEach((e) => {\r\n  //   //   console.log(\"loggggg\");\r\n  //   //   console.log(e.symbol);\r\n  //   //   let curSymbol = e.symbol;\r\n  //   //   query = `${ApiUrl}${curSymbol}&to_currency=${curCurrency}&apikey=${ApiKey}`;\r\n  //   // },\r\n  //   // cryptoCurrency.map((item) => console.log(\"IMTEE\", item));\r\n  //   // let response = await fetch(query);\r\n  //   // let data = await response.json();\r\n  //   // console.log(\"INSIDE AYSNC FETCH\");\r\n  //   // return data;\r\n  // }\r\n  // doFetch();\r\n  // useEffect(() => {\r\n\r\n  //     doFetch().then((result) => {\r\n  //       if (result.Note) {\r\n  //         console.log(\"GOT AN BIIGGG ERROR\");\r\n  //         setGotError(true);\r\n  //       } else {\r\n  //         // console.log(\"LAST LOGGGGG\");\r\n  //         // console.log(\"FROM LAST DATA \", result);\r\n  //         cryptoData.push(result[\"Realtime Currency Exchange Rate\"]);\r\n  //         setGotError(false);\r\n  //         setIsLoading(false);\r\n  //         // setCryptoData([...cryptoData, { result }]);\r\n  //         // console.log(cryptoData);\r\n  //       }\r\n  //     });\r\n\r\n  //     //=======================================================\r\n  //     //=======================================================\r\n  //   });\r\n  // }, [curCurrency]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"STATE CHANGED\");\r\n  // }, [cryptoData]);\r\n\r\n  //=============================================================================\r\n  //                             CHANGING CURRENCY\r\n  //=============================================================================\r\n\r\n  //==========================================================================\r\n  //                        OUTPUT\r\n  //=========================================================================\r\n  // console.log(gotError);\r\n  // if (gotError) {\r\n  //   console.log(gotError);\r\n  //   output = (\r\n  //     <div className=\"errorCont\">\r\n  //       <h2 className=\"errorMsg\">\r\n  //         Sorry! We have reached the limit of API calls, Please check after\r\n  //         sometime\r\n  //       </h2>\r\n  //       <h3 className=\"errorMsgSm\">Check Console for more info.</h3>\r\n  //     </div>\r\n  //   );\r\n  // } else {\r\n  //   output = (\r\n  //     <div className=\"listCont\">\r\n  //       {cryptoData.map((e) => {\r\n  //         {\r\n  //           /* let title =\r\n  //           e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //             \"2. From_Currency Name\"\r\n  //           ];\r\n  //         let currCode =\r\n  //           e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //             \"1. From_Currency Code\"\r\n  //           ];\r\n  //         let outputCurr =\r\n  //           e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //             \"4. To_Currency Name\"\r\n  //           ];\r\n  //         let exchangeRate =\r\n  //           e[\"result\"][\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"];\r\n  //         console.log(title); */\r\n  //         }\r\n\r\n  //         return (\r\n  //           <DataCard\r\n  //             title={\r\n  //               e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //                 \"2. From_Currency Name\"\r\n  //               ]\r\n  //             }\r\n  //             currCode={\r\n  //               e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //                 \"1. From_Currency Code\"\r\n  //               ]\r\n  //             }\r\n  //             outputCurr={\r\n  //               e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //                 \"4. To_Currency Name\"\r\n  //               ]\r\n  //             }\r\n  //             exchangeRate={\r\n  //               e[\"result\"][\"Realtime Currency Exchange Rate\"][\r\n  //                 \"5. Exchange Rate\"\r\n  //               ]\r\n  //             }\r\n  //           />\r\n  //         );\r\n  //       })}\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  // if (gotError) {\r\n  //   console.log(gotError);\r\n  //   output = (\r\n  //     <div className=\"errorCont\">\r\n  //       <h2 className=\"errorMsg\">\r\n  //         Sorry! We have reached the limit of API calls, Please check after\r\n  //         sometime\r\n  //       </h2>\r\n  //       <h3 className=\"errorMsgSm\">Check Console for more info.</h3>\r\n  //     </div>\r\n  //   );\r\n  // } else {\r\n  //   output =\r\n  //     isLoading &&\r\n  //     (<h1>Loading...</h1>)(\r\n  //       <div className=\"listCont\">\r\n  //         {cryptoData.map((e) => (\r\n  //           <DataCard\r\n  //             title={e[\"2. From_Currency Name\"]}\r\n  //             currCode={e[\"1. From_Currency Code\"]}\r\n  //             outputCurr={e[\"4. To_Currency Name\"]}\r\n  //             exchangeRate={e[\"5. Exchange Rate\"]}\r\n  //           />\r\n  //         ))}\r\n  //       </div>\r\n  //     );\r\n  // }\r\n\r\n  //========================================================================\r\n  //========================================================================\r\n  return (\r\n    <div className=\"cryptoCont\">\r\n      {/* <div className=\"selectorsCont\">\r\n        <Dropdown\r\n          options={options}\r\n          onChange={changeCurrency}\r\n          value={defaultOption}\r\n          placeholder=\"Select an option\"\r\n        />\r\n      </div>\r\n\r\n      {output} */}\r\n    </div>\r\n  );\r\n}\r\nexport default Crypto;\r\n",["123","124"],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Calculators.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\News.js",["125"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./news.css\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nfunction News() {\r\n  const [newsData, setNewsData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const ApiKey = process.env.REACT_APP_NEWS_API_KEY;\r\n  const query = `http://newsapi.org/v2/top-headlines?country=in&category=business&apiKey=${ApiKey}`;\r\n\r\n  //=============================================================\r\n  //                    FETCHING DATA\r\n  //=============================================================\r\n\r\n  async function getNews() {\r\n    let response = await fetch(query);\r\n    let data = await response.json();\r\n\r\n    // console.log(data[\"articles\"]);\r\n    setNewsData(data[\"articles\"]);\r\n  }\r\n\r\n  //=============================================================\r\n  //                    USE EFFECT\r\n  //=============================================================\r\n\r\n  useEffect(() => {\r\n    getNews().then(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  //=============================================================\r\n  //                    OPEN NEWS ON CLICK\r\n  //=============================================================\r\n  function openNews(url) {\r\n    window.open(url, \" _blank\");\r\n  }\r\n\r\n  //=============================================\r\n  //=============================================\r\n\r\n  return (\r\n    <div className=\"newsMainCont\">\r\n      {isLoading ? (\r\n        <>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={5} />\r\n          </div>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={5} />\r\n          </div>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={5} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        newsData &&\r\n        newsData.map((e, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              className=\"newsCont\"\r\n              onClick={() => {\r\n                openNews(e.url);\r\n              }}\r\n            >\r\n              <div className=\"newsImgCont\">\r\n                <img className=\"newsImg\" alt=\"news here\" src={e.urlToImage} />\r\n              </div>\r\n              <div className=\"newsDataCont\">\r\n                <h2 className=\"newsTitle\">{e.title}</h2>\r\n                <div className=\"newsDescCont\">\r\n                  <h4 className=\"newsDesc\">{e.description}</h4>\r\n                  <div className=\"newsDataSmCont\">\r\n                    <h5 className=\"newsSource\">Source :{e.source.name}</h5>\r\n                    <h5 className=\"newsAuthor\">Author :{e.author}</h5>\r\n                    <h5 className=\"newsData\">\r\n                      Date : {e.publishedAt.replace(/[T].*/g, \"\")}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default News;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\Crypto2.js",["126","127"],"import React, { useEffect, useState } from \"react\";\r\nimport DataCard from \"./DataCard\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n//=========================================\r\n//            DROPDOWN INIT\r\n//=========================================\r\nconst options = [\r\n  { label: \"INR (₹)\", value: \"INR\" },\r\n  { label: \"USD ($)\", value: \"USD\" },\r\n  { label: \"EUR (€)\", value: \"EUR\" },\r\n  { label: \"JPY (¥)\", value: \"JPY\" },\r\n];\r\nconst defaultOption = options[0].value;\r\n\r\n//========================================\r\n//              REACT FUNCTION\r\n//========================================\r\nfunction Crypto2() {\r\n  const [curCurrency, setCurCurrency] = useState(defaultOption);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [cryptoData, setCryptoData] = useState({});\r\n  //   let cryptoData = [];\r\n\r\n  //===========================================\r\n  //          LIST OF CRYPTOCURRENCIES\r\n  //===========================================\r\n  const cryptoCurrency = [\r\n    { name: \"Bitcoin\", symbol: \"BTC\" },\r\n    { name: \"Ethereum\", symbol: \"ETH\" },\r\n    { name: \"Litecoin\", symbol: \"LTC\" },\r\n  ];\r\n\r\n  //=============================================\r\n  //              API INIT\r\n  //=============================================\r\n  let cryptos = [];\r\n  let url = \"https://coingecko.p.rapidapi.com/coins/markets?vs_currency=\";\r\n\r\n  //====================================================\r\n  //       Converting available currency to array\r\n  //====================================================\r\n\r\n  cryptoCurrency.map((e) => {\r\n    cryptos.push(e.name.toLowerCase());\r\n  });\r\n\r\n  //=======================================================\r\n  //            DECLARING ASYNC API\r\n  //=======================================================\r\n\r\n  let query = `${url}${curCurrency}&ids=${cryptos}`;\r\n\r\n  async function getData() {\r\n    let response = await fetch(query, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-key\": process.env.REACT_APP_X_RapidAPI_Key,\r\n        \"x-rapidapi-host\": \"coingecko.p.rapidapi.com\",\r\n      },\r\n    });\r\n\r\n    let data = await response.json();\r\n    return data;\r\n  }\r\n\r\n  //==========================================================\r\n  //                 USEEFFECT HOOK\r\n  //==========================================================\r\n\r\n  useEffect(() => {\r\n    getData().then((data) => {\r\n      setCryptoData(data);\r\n      setIsLoading(false);\r\n    });\r\n  }, [curCurrency]);\r\n\r\n  //============================================\r\n  //            CHANGE CURRENCY\r\n  //===========================================\r\n  function changeCurrency(e) {\r\n    console.log(\"value \", e.value);\r\n\r\n    setCurCurrency(e.value);\r\n  }\r\n\r\n  //============================================\r\n  //*************** RETURN  ******************/\r\n  //============================================\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        className=\"dropdown\"\r\n        controlClassName=\"dropdownControl\"\r\n        options={options}\r\n        onChange={changeCurrency}\r\n        value={curCurrency}\r\n        placeholder=\"Select an option\"\r\n      />\r\n      {isLoading ? (\r\n        <>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={3} />\r\n          </div>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={20} count={3} />\r\n          </div>\r\n          <div className=\"newsSkeletonCont\">\r\n            <Skeleton height={70} />\r\n            <Skeleton height={25} count={3} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        Object.keys(cryptoData).map((e) => {\r\n          return (\r\n            <DataCard\r\n              key={cryptoData[e][\"id\"]}\r\n              image={cryptoData[e][\"image\"]}\r\n              title={cryptoData[e][\"name\"]}\r\n              currency={curCurrency}\r\n              price={cryptoData[e][\"current_price\"]}\r\n              symbol={cryptoData[e][\"symbol\"]}\r\n            />\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Crypto2;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalculatorCard.js",["128"],"import React from \"react\";\r\nimport \"./calcCard.css\";\r\nfunction CalculatorCard(props) {\r\n  return (\r\n    <div className=\"calculatorCont\" onClick={props.onclick}>\r\n      <div className=\"calcImgCont\">\r\n        <img className=\"calcImg\" alt=\"EMI Image\" src={props.img} />\r\n      </div>\r\n      <h2 className=\"calcTitle\">{props.title}</h2>\r\n    </div>\r\n  );\r\n}\r\nexport default CalculatorCard;\r\n","F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\CalcScreen.js",[],"F:\\VS CODE PROJECTS\\React PlayGround\\stocks_app\\src\\SideBarContent.js",["129","130","131"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport PieChartIcon from \"@material-ui/icons/PieChart\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\n\r\nfunction SideBarContent(props) {\r\n  function hide() {\r\n    console.log(\"hideee\");\r\n    document.getElementById(\"sideBarCont\").style.display = \"none\";\r\n  }\r\n\r\n  return (\r\n    <div id=\"sideBarCont\">\r\n      {/* <button onClick={hide}>Hide</button> */}\r\n      <div className=\"listMainCont\">\r\n        <ul className=\"sideBarList\">\r\n          <li className=\"sideBarListItem\">\r\n            <DashboardIcon /> <span className=\"settingName\">Dashboard</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <PieChartIcon /> <span className=\"settingName\">Overview</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <TimelineIcon /> <span className=\"settingName\">Analytics</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <InsertChartIcon /> <span className=\"settingName\">Watchlist</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <AccountCircleIcon /> <span className=\"settingName\">Profile</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"subList\">\r\n        <ul className=\"sideBarList\">\r\n          <li className=\"sideBarListItem\">\r\n            <SettingsIcon />\r\n            <span className=\"settingName\">Settings</span>\r\n          </li>\r\n          <li className=\"sideBarListItem\">\r\n            <NotificationsIcon />\r\n            <span className=\"settingName\">Notifications</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"signatureDiv\">\r\n        <h4 className=\"titleFirst\">\r\n          Made with <span>❤</span> by &nbsp;\r\n          <a className=\"name\" href=\"https://atishayjain.netlify.app/\">\r\n            Atishay Jain\r\n          </a>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SideBarContent;\r\n",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"140","line":5,"column":3,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"141","line":8,"column":3,"nodeType":"138","messageId":"139","endLine":8,"endColumn":8},{"ruleId":"136","severity":1,"message":"142","line":11,"column":8,"nodeType":"138","messageId":"139","endLine":11,"endColumn":15},{"ruleId":"136","severity":1,"message":"143","line":16,"column":10,"nodeType":"138","messageId":"139","endLine":16,"endColumn":21},{"ruleId":"136","severity":1,"message":"144","line":16,"column":23,"nodeType":"138","messageId":"139","endLine":16,"endColumn":39},{"ruleId":"145","severity":1,"message":"146","line":65,"column":14,"nodeType":"147","messageId":"148","endLine":65,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":78,"column":17,"nodeType":"147","messageId":"148","endLine":78,"endColumn":19},{"ruleId":"132","replacedBy":"149"},{"ruleId":"134","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":82,"column":6,"nodeType":"153","endLine":82,"endColumn":19,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":7,"column":9,"nodeType":"157","endLine":7,"endColumn":68},{"ruleId":"136","severity":1,"message":"158","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"159","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"136","severity":1,"message":"160","line":7,"column":23,"nodeType":"138","messageId":"139","endLine":7,"endColumn":37},{"ruleId":"136","severity":1,"message":"161","line":8,"column":10,"nodeType":"138","messageId":"139","endLine":8,"endColumn":18},{"ruleId":"136","severity":1,"message":"162","line":8,"column":20,"nodeType":"138","messageId":"139","endLine":8,"endColumn":31},{"ruleId":"136","severity":1,"message":"163","line":9,"column":10,"nodeType":"138","messageId":"139","endLine":9,"endColumn":20},{"ruleId":"136","severity":1,"message":"164","line":9,"column":22,"nodeType":"138","messageId":"139","endLine":9,"endColumn":35},{"ruleId":"136","severity":1,"message":"165","line":10,"column":10,"nodeType":"138","messageId":"139","endLine":10,"endColumn":19},{"ruleId":"136","severity":1,"message":"166","line":10,"column":21,"nodeType":"138","messageId":"139","endLine":10,"endColumn":33},{"ruleId":"136","severity":1,"message":"167","line":18,"column":7,"nodeType":"138","messageId":"139","endLine":18,"endColumn":13},{"ruleId":"136","severity":1,"message":"168","line":19,"column":7,"nodeType":"138","messageId":"139","endLine":19,"endColumn":12},{"ruleId":"136","severity":1,"message":"169","line":36,"column":9,"nodeType":"138","messageId":"139","endLine":36,"endColumn":22},{"ruleId":"151","severity":1,"message":"170","line":62,"column":6,"nodeType":"153","endLine":62,"endColumn":16,"suggestions":"171"},{"ruleId":"132","replacedBy":"172"},{"ruleId":"134","replacedBy":"173"},{"ruleId":"151","severity":1,"message":"174","line":30,"column":6,"nodeType":"153","endLine":30,"endColumn":8,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":46,"column":26,"nodeType":"178","messageId":"179","endLine":46,"endColumn":28},{"ruleId":"151","severity":1,"message":"180","line":78,"column":6,"nodeType":"153","endLine":78,"endColumn":19,"suggestions":"181"},{"ruleId":"155","severity":1,"message":"156","line":7,"column":9,"nodeType":"157","endLine":7,"endColumn":68},{"ruleId":"136","severity":1,"message":"137","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"182","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"183","line":12,"column":12,"nodeType":"138","messageId":"139","endLine":12,"endColumn":16},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Notifications' is defined but never used.","'Block' is defined but never used.","'Sidebar' is defined but never used.","'sidebarOpen' is assigned a value but never used.","'onSetSidebarOpen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["184"],["185"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getGold' and 'getSilver'. Either include them or remove the dependency array.","ArrayExpression",["186"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'DataCard' is defined but never used.","'Dropdown' is defined but never used.","'setCurCurrency' is assigned a value but never used.","'gotError' is assigned a value but never used.","'setGotError' is assigned a value but never used.","'cryptoData' is assigned a value but never used.","'setCryptoData' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'output' is defined but never used.","'query' is defined but never used.","'defaultOption' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'call'. Either include it or remove the dependency array.",["187"],["184"],["185"],"React Hook useEffect has a missing dependency: 'getNews'. Either include it or remove the dependency array.",["188"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["189"],"'useState' is defined but never used.","'hide' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [curCurrency, getGold, getSilver]",{"range":"198","text":"199"},"Update the dependencies array to be: [call, curQuery]",{"range":"200","text":"201"},"Update the dependencies array to be: [getNews]",{"range":"202","text":"203"},"Update the dependencies array to be: [curCurrency, getData]",{"range":"204","text":"205"},[2366,2379],"[curCurrency, getGold, getSilver]",[2083,2093],"[call, curQuery]",[1022,1024],"[getNews]",[2503,2516],"[curCurrency, getData]"]